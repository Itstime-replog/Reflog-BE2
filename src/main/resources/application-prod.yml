spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail.smtp.debug: true
      mail.smtp.connectiontimeout: 1000 #1초
      mail.starttls.enable: true
      mail.smtp.auth: true

  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    database-platform: org.hibernate.dialect.MySQLDialect
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: update

  redis:
    data:
      pool:
        min-idle: 0
        max-idle: 8
        max-active: 8

  data:
    redis:
      port: 6379
      host: 172.17.0.3


  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            clientAuthenticationMethod: client_secret_post
            authorizationGrantType: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            scope:
              - profile_nickname
              - profile_image
            clientName: Kakao
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            clientAuthenticationMethod: client_secret_post
            authorizationGrantType: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/naver"
            scope:
              - nickname
              - profile_image
            clientName: Naver

        provider:
          kakao:
            authorizationUri: https://kauth.kakao.com/oauth/authorize
            tokenUri: https://kauth.kakao.com/oauth/token
            userInfoUri: https://kapi.kakao.com/v2/user/me
            userNameAttribute: id
          naver:
            authorizationUri: https://nid.naver.com/oauth2.0/authorize
            tokenUri: https://nid.naver.com/oauth2.0/token
            userInfoUri: https://openapi.naver.com/v1/nid/me
            userNameAttribute: response

jwt:
  secret: ${JWT_SECRET_KEY}
  redirect: http://localhost:8080/login?name=%s&access_token=%s&refresh_token=%s
  access-token:
    expiration-time: 7200000    # 2시간
  refresh-token:
    expiration-time: 604800000

cloud:
  aws:
    s3:
      bucket: ${AWS_BUCKET}
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${AWS_ACCESSKEY}
      secretKey: ${AWS_SECRETKEY}

openai:
  api:
    key: ${OPENAI_API_KEY}

server:
  port: 8080
