version: '3.8'

services:
  app:
    image: yeoljeongping/reflogdocker
    pull_policy: always
    ports:
      - "8080:8080"
    environment:
      DB_URL: ${DB_URL}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      AWS_ACCESSKEY: ${AWS_ACCESSKEY}
      AWS_SECRETKEY: ${AWS_SECRETKEY}
      AWS_BUCKET: ${AWS_BUCKET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}

      SPRING_PROFILES_ACTIVE: prod # prod 프로파일 활성화
      hibernate_ddl_auto: create

      # Redis 환경 변수 추가
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    depends_on:
      redis:
          condition: service_healthy
    networks:
      - app-network
    restart: always

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    depends_on:
      - app
      - certbot
    networks:
      - app-network
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
